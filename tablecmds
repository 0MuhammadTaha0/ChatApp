CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, 
    username TEXT NOT NULL,
    hash TEXT NOT NULL,
    status INTEGER default 1,
    dp BLOB,
    CHECK (status in (0, 1))
);

CREATE TABLE friendships (
    userid INTEGER,
    friendid INTEGER,
    PRIMARY KEY (userid, friendid),
    FOREIGN KEY (userid) REFERENCES users(id),
    FOREIGN KEY (friendid) REFERENCES users(id)
);

CREATE TABLE friend_requests(
    userid INTEGER,
    friendid INTEGER,
    PRIMARY KEY (userid, friendid),
    FOREIGN KEY (userid) REFERENCES users(id),
    FOREIGN KEY (friendid) REFERENCES users(id)
);

CREATE TABLE messages(
    mid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    sender INTEGER NOT NULL,
    receiver INTEGER NOT NULL,
    message TEXT NOT NULL,
    timestamp TEXT NOT NULL,
    FOREIGN KEY (sender) REFERENCES users(id),
    FOREIGN KEY (receiver) REFERENCES users(id)
);

--COPY
CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, 
    username TEXT NOT NULL,
    hash TEXT NOT NULL,
    status INTEGER default 1, 
    CHECK (status in (0, 1))
);
CREATE UNIQUE INDEX username on users(username);
CREATE TABLE friendships (
    userid INTEGER,
    friendid INTEGER,
    PRIMARY KEY (userid, friendid),
    FOREIGN KEY (userid) REFERENCES users(id),
    FOREIGN KEY (friendid) REFERENCES users(id)
);
CREATE TABLE friend_requests(
    userid INTEGER,
    friendid INTEGER,
    PRIMARY KEY (userid, friendid),
    FOREIGN KEY (userid) REFERENCES users(id),
    FOREIGN KEY (friendid) REFERENCES users(id)
);

CREATE TABLE messages(
    mid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    sender INTEGER NOT NULL,
    receiver INTEGER NOT NULL,
    message TEXT NOT NULL,
    timestamp TEXT NOT NULL,
    FOREIGN KEY (sender) REFERENCES users(id),
    FOREIGN KEY (receiver) REFERENCES users(id)
);
CREATE INDEX msg on messages(sender, receiver);